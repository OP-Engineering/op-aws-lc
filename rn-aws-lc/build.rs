extern crate cbindgen;

use std::env;

fn generate_c_headers() {
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();
    let header_path = "generated/include/libaws_lc.h";

    cbindgen::Builder::new()
        .with_crate(crate_dir)
        .with_language(cbindgen::Language::Cxx)
        .with_include_guard("aws_lc_h")
        .with_autogen_warning(
            "/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */",
        )
        .with_namespace("aws_lc")
        // .with_cpp_compat(true)
        .generate()
        .expect("Unable to generate bindings")
        .write_to_file(header_path);
}

fn main() {
    // Tell Cargo that if the given file changes, to rerun this build script.
    println!("cargo:rerun-if-changed=src/lib.rs");

    if std::env::var("CARGO_CFG_CLIPPY").is_err() {
        // Only run cbindgen if not running cargo clippy
        extern crate cbindgen;
        generate_c_headers();
    }
}
